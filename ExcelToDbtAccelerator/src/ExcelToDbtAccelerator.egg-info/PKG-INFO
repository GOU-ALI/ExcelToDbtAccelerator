Metadata-Version: 2.1
Name: ExcelToDbtAccelerator
Version: 0.1.0
Summary: Excel To DBT Accelerator - Automate DBT schema and documentation generation
Home-page: https://github.com/abdelgou
Author: Gou Ali
Author-email: abdellatif.gou-ali@artefact.com
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Requires-Python: >=3.7
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: pandas>=1.0.0
Requires-Dist: PyYAML>=5.1
Requires-Dist: openpyxl>=3.0.0
Provides-Extra: dev
Requires-Dist: pytest; extra == "dev"
Requires-Dist: flake8; extra == "dev"
Requires-Dist: black; extra == "dev"
Requires-Dist: mypy; extra == "dev"

# ETDA (Excel To DBT Accelerator)

ETDA is a powerful Python tool designed to accelerate the process of creating DBT (Data Build Tool) models and documentation from Excel-based table definitions. By automating the generation of DBT schema files and markdown documentation, ETDA significantly reduces setup time and ensures consistency in data modeling practices.

## Features

- Automatically generates DBT schema YAML files from Excel inputs
- Creates markdown documentation for easy reference
- Streamlines the process of setting up DBT projects
- Ensures consistency between data definitions and DBT configurations

## Installation

```bash
pip install etda
```

## Quick Start

```python
from etda import generate_schema, generate_md

# Generate schema and documentation
generate_schema("path/to/your/excel_file.xlsx", "your_model_name")
generate_md("path/to/your/excel_file.xlsx", "your_model_name")
```

For more detailed usage instructions, please refer to the [documentation](docs/usage.md).

## Contributing

Contributions are welcome! Please feel free to submit a Pull Request.

## License

This project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.
